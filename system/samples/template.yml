PROPOSITION:
# a sequence of map (dictionary) mapping the key to the `text` field
  first: Includes everything within this line. The line can be V v v long!
  second: Yes!     # here
  third: yeas

ASSUMPTION: [first, second] # a list of assumptions

ARGUMENT:
# a sequence of map (dictionary) mapping the argument id to its fields - premise, exception, conclusion weight
# premise and exception are list while conclusion is a single propositions
# the weights are double, ranging from 0 to 1
# available standards are: `scintilla`, `preponderance`, `clear and convincing`, `beyond reasonable doubt`, and `dialectical validity`
  arg1:
    premise: [-first,second] # - infront will denote the negation of the proposition above, if it exists
    exception: []   # nothing!
    conclusion: third # is not a list!
    weight: 0.01
    proofstandard: preponderance

  arg 2:
    premise: [second]
    exception: [first]
    conclusion: third
    weight: 0.2
    proofstandard: beyond reasonable doubt

PARAMETER:
# define the parameters use for the proofstandard
# each parameter is in the range of 0 and 1
  alpha: 0.3
  beta: 0.2
  gamma: 0.3
