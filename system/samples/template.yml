PROPOSITION :
# a sequence of map (dictionary) mapping the key to the `text` field
  first :
    text : Includes everything within this line. The line can be V v v long!

  second :  # Another example
    text : Yes!

ASSUMPTION : [ first , second ] # a list of assumptions

ARGUMENT :
# a sequence of map (dictionary) mapping the argument id to its fields - premise, exception, conclusion weight
# premise and exception are list while conclusion is a single propositions
# the weights are double, ranging from 0 to 1
# available standards are: `scintilla`, `preponderance`, `clear and convincing`, `beyond reasonable doubt`, and `dialectical validity`
  arg1 :
    premise : [ -something , another thing ] # - infront will denote the negation of the proposition above, if it exists
    exception : [ ]   # nothing!
    conclusion : something else # is not a list!
    weight : 0.01
    proofstandard : preponderance

  arg 2 :
    premise :  [ something ]
    exception : [ something else ]
    conclusion : another thing
    weight : 0.2
    proofstandard : beyond reasonable doubt

PARAMETER :
# define the parameters use for the proofstandard
# each parameter is in the range of 0 and 1
  alpha : 0.3
  beta : 0.2
  gamma : 0.3
