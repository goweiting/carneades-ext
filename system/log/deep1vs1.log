	Tokenizing file...
	Parsing tokens...
	Adding propositions to CAES
	Adding assumptions to CAES
	Adding arguments to CAES
Added argument 'arg0' to graph by 'None'
Added proposition 'issue' to graph with state None
Added proposition '-issue' to graph with state None
Added proposition 'p11' to graph with state None
Added proposition 'p12' to graph with state None
Added argument 'arg1' to graph by 'None'
Proposition 'p11' is already in graph
Added proposition '-p11' to graph with state None
Added proposition 'p21' to graph with state None
Added proposition 'e21' to graph with state None
Added argument 'arg2' to graph by 'None'
Proposition 'p21' is already in graph
Added proposition '-p21' to graph with state None
Added proposition 'p31' to graph with state None
Added proposition 'e31' to graph with state None
Added argument 'arg3' to graph by 'None'
Proposition 'p31' is already in graph
Added proposition '-p31' to graph with state None
Added proposition 'p41' to graph with state None
Added proposition 'e41' to graph with state None
Added argument 'arg4' to graph by 'None'
Proposition 'e31' is already in graph
Added proposition '-e31' to graph with state None
Added proposition 'p42' to graph with state None
Added argument 'arg5' to graph by 'None'
Proposition 'p42' is already in graph
Added proposition '-p42' to graph with state None
Added proposition 'p43' to graph with state None
	Adding parameter to CAES
	Adding proofstandard to CAES
	Adding issues to CAES
Dialogue Mode: On
********************************************************************************
ISSUE 0: "issue"
********************************************************************************
Calling dialogue(issue)
Added argument 'arg0' to graph by 'PROPONENT'
Added proposition 'issue' to graph with state claimed
Added proposition '-issue' to graph with state None
Added proposition 'p11' to graph with state None
Added proposition 'p12' to graph with state None
proposition "issue" state updated to "claimed"

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
-----------------------------------------
Burden of proof met by PROPONENT : ?
-----------------------------------------
proofstandard: []
Evaluating issue: "issue"
  Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
    Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
      Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
        Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
          Calling meets_proof_standard(p11, scintilla)
	arguments:[] 
          meets_proof_standard(p11, scintilla)-->False
        acceptable(p11)-->False
      applicable([p11, p12], ~[] => issue)-->False
    meets_proof_standard(issue, scintilla)-->False
  acceptable(issue)-->False
------ issue IS NOT acceptable ------
============================================

  Calling burden_met(issue, [p11, p12], ~[] => issue)
Checking burden of proof for PROPONENT
    Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
      Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
        Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
          Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
            Calling meets_proof_standard(p11, scintilla)
	arguments:[] 
            meets_proof_standard(p11, scintilla)-->False
          acceptable(p11)-->False
        applicable([p11, p12], ~[] => issue)-->False
      meets_proof_standard(issue, scintilla)-->False
    acceptable(issue)-->False
Burden of Proof: False
Current Premise: "p11"
Adding arguments for "p11"
Added argument 'arg1' to graph by 'PROPONENT'
Proposition 'p11' is already in graph
Added proposition '-p11' to graph with state None
Added proposition 'p21' to graph with state None
Added proposition 'e21' to graph with state None
proposition "p11" state updated to "claimed"

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
proofstandard: []
Evaluating issue: "issue"
    Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
      Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
        Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
          Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
            Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
              Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(p21, scintilla)
	arguments:[] 
                  meets_proof_standard(p21, scintilla)-->False
                acceptable(p21)-->False
Current exception: {e21}
                Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                  meets_proof_standard(e21, scintilla)-->False
                acceptable(e21)-->False
              applicable([p21], ~[e21] => p11)-->False
            meets_proof_standard(p11, scintilla)-->False
          acceptable(p11)-->False
        applicable([p11, p12], ~[] => issue)-->False
      meets_proof_standard(issue, scintilla)-->False
    acceptable(issue)-->False
------ issue IS NOT acceptable ------
============================================

    Calling burden_met(issue, [p21], ~[e21] => p11)
Checking burden of proof for PROPONENT
      Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
        Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
          Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
            Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
              Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
                Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                  Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(p21, scintilla)
	arguments:[] 
                    meets_proof_standard(p21, scintilla)-->False
                  acceptable(p21)-->False
Current exception: {e21}
                  Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                    meets_proof_standard(e21, scintilla)-->False
                  acceptable(e21)-->False
                applicable([p21], ~[e21] => p11)-->False
              meets_proof_standard(p11, scintilla)-->False
            acceptable(p11)-->False
          applicable([p11, p12], ~[] => issue)-->False
        meets_proof_standard(issue, scintilla)-->False
      acceptable(issue)-->False
Burden of Proof: False
Current Premise: "p21"
Adding arguments for "p21"
Added argument 'arg2' to graph by 'PROPONENT'
Proposition 'p21' is already in graph
Added proposition '-p21' to graph with state None
Added proposition 'p31' to graph with state None
Added proposition 'e31' to graph with state None
proposition "p21" state updated to "claimed"

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
proofstandard: []
Evaluating issue: "issue"
      Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
        Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
          Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
            Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
              Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
                Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                  Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                      Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                        Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                          Calling meets_proof_standard(p31, scintilla)
	arguments:[] 
                          meets_proof_standard(p31, scintilla)-->False
                        acceptable(p31)-->False
Current exception: {e31}
                        Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                          Calling meets_proof_standard(e31, scintilla)
	arguments:[] 
                          meets_proof_standard(e31, scintilla)-->False
                        acceptable(e31)-->False
                      applicable([p31], ~[e31] => p21)-->False
                    meets_proof_standard(p21, scintilla)-->False
                  acceptable(p21)-->False
Current exception: {e21}
                  Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                    meets_proof_standard(e21, scintilla)-->False
                  acceptable(e21)-->False
                applicable([p21], ~[e21] => p11)-->False
              meets_proof_standard(p11, scintilla)-->False
            acceptable(p11)-->False
          applicable([p11, p12], ~[] => issue)-->False
        meets_proof_standard(issue, scintilla)-->False
      acceptable(issue)-->False
------ issue IS NOT acceptable ------
============================================

      Calling burden_met(issue, [p31], ~[e31] => p21)
Checking burden of proof for PROPONENT
        Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
          Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
            Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
              Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
                Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
                  Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                    Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                      Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                        Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                          Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                            Calling meets_proof_standard(p31, scintilla)
	arguments:[] 
                            meets_proof_standard(p31, scintilla)-->False
                          acceptable(p31)-->False
Current exception: {e31}
                          Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                            Calling meets_proof_standard(e31, scintilla)
	arguments:[] 
                            meets_proof_standard(e31, scintilla)-->False
                          acceptable(e31)-->False
                        applicable([p31], ~[e31] => p21)-->False
                      meets_proof_standard(p21, scintilla)-->False
                    acceptable(p21)-->False
Current exception: {e21}
                    Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                      Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                      meets_proof_standard(e21, scintilla)-->False
                    acceptable(e21)-->False
                  applicable([p21], ~[e21] => p11)-->False
                meets_proof_standard(p11, scintilla)-->False
              acceptable(p11)-->False
            applicable([p11, p12], ~[] => issue)-->False
          meets_proof_standard(issue, scintilla)-->False
        acceptable(issue)-->False
Burden of Proof: False
Current Premise: "p31"
Adding arguments for "p31"
Added argument 'arg3' to graph by 'PROPONENT'
Proposition 'p31' is already in graph
Added proposition '-p31' to graph with state None
Added proposition 'p41' to graph with state None
Added proposition 'e41' to graph with state None
proposition "p31" state updated to "claimed"

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
proofstandard: []
Evaluating issue: "issue"
        Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
          Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
            Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
              Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
                Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
                  Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                    Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                      Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                        Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                          Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                            Calling meets_proof_standard(p31, scintilla)
	arguments:['[p41], ~[e41] => p31'] 
                              Calling applicable([p41], ~[e41] => p31)
Checking applicability of arg3...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p41}
Current exception: {e41}
                                Calling acceptable(e41)
Checking whether proposition 'e41' meets proof standard 'scintilla'.
                                  Calling meets_proof_standard(e41, scintilla)
	arguments:[] 
                                  meets_proof_standard(e41, scintilla)-->False
                                acceptable(e41)-->False
                              applicable([p41], ~[e41] => p31)-->True
                            meets_proof_standard(p31, scintilla)-->True
                          acceptable(p31)-->True
Current exception: {e31}
                          Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                            Calling meets_proof_standard(e31, scintilla)
	arguments:[] 
                            meets_proof_standard(e31, scintilla)-->False
                          acceptable(e31)-->False
                        applicable([p31], ~[e31] => p21)-->True
                      meets_proof_standard(p21, scintilla)-->True
                    acceptable(p21)-->True
Current exception: {e21}
                    Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                      Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                      meets_proof_standard(e21, scintilla)-->False
                    acceptable(e21)-->False
                  applicable([p21], ~[e21] => p11)-->True
                meets_proof_standard(p11, scintilla)-->True
              acceptable(p11)-->True
            applicable([p11, p12], ~[] => issue)-->True
          meets_proof_standard(issue, scintilla)-->True
        acceptable(issue)-->True
------ issue IS acceptable ------
============================================

        Calling burden_met(issue, [p41], ~[e41] => p31)
Checking burden of proof for PROPONENT
          Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
            Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
              Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
                Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
                    Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                      Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                        Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                          Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                            Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                              Calling meets_proof_standard(p31, scintilla)
	arguments:['[p41], ~[e41] => p31'] 
                                Calling applicable([p41], ~[e41] => p31)
Checking applicability of arg3...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p41}
Current exception: {e41}
                                  Calling acceptable(e41)
Checking whether proposition 'e41' meets proof standard 'scintilla'.
                                    Calling meets_proof_standard(e41, scintilla)
	arguments:[] 
                                    meets_proof_standard(e41, scintilla)-->False
                                  acceptable(e41)-->False
                                applicable([p41], ~[e41] => p31)-->True
                              meets_proof_standard(p31, scintilla)-->True
                            acceptable(p31)-->True
Current exception: {e31}
                            Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                              Calling meets_proof_standard(e31, scintilla)
	arguments:[] 
                              meets_proof_standard(e31, scintilla)-->False
                            acceptable(e31)-->False
                          applicable([p31], ~[e31] => p21)-->True
                        meets_proof_standard(p21, scintilla)-->True
                      acceptable(p21)-->True
Current exception: {e21}
                      Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                        Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                        meets_proof_standard(e21, scintilla)-->False
                      acceptable(e21)-->False
                    applicable([p21], ~[e21] => p11)-->True
                  meets_proof_standard(p11, scintilla)-->True
                acceptable(p11)-->True
              applicable([p11, p12], ~[] => issue)-->True
            meets_proof_standard(issue, scintilla)-->True
          acceptable(issue)-->True
Burden of Proof: True
        burden_met(issue, [p41], ~[e41] => p31)-->True

      burden_met(issue, [p31], ~[e31] => p21)-->True

    burden_met(issue, [p21], ~[e21] => p11)-->True

Current Premise: "p12"
  burden_met(issue, [p11, p12], ~[] => issue)-->True

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
-----------------------------------------
Burden of proof met by PROPONENT : True
-----------------------------------------
proofstandard: []
Evaluating issue: "issue"
  Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
    Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
      Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
        Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
          Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
            Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
              Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                  Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                    Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                      Calling meets_proof_standard(p31, scintilla)
	arguments:['[p41], ~[e41] => p31'] 
                        Calling applicable([p41], ~[e41] => p31)
Checking applicability of arg3...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p41}
Current exception: {e41}
                          Calling acceptable(e41)
Checking whether proposition 'e41' meets proof standard 'scintilla'.
                            Calling meets_proof_standard(e41, scintilla)
	arguments:[] 
                            meets_proof_standard(e41, scintilla)-->False
                          acceptable(e41)-->False
                        applicable([p41], ~[e41] => p31)-->True
                      meets_proof_standard(p31, scintilla)-->True
                    acceptable(p31)-->True
Current exception: {e31}
                    Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                      Calling meets_proof_standard(e31, scintilla)
	arguments:[] 
                      meets_proof_standard(e31, scintilla)-->False
                    acceptable(e31)-->False
                  applicable([p31], ~[e31] => p21)-->True
                meets_proof_standard(p21, scintilla)-->True
              acceptable(p21)-->True
Current exception: {e21}
              Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                meets_proof_standard(e21, scintilla)-->False
              acceptable(e21)-->False
            applicable([p21], ~[e21] => p11)-->True
          meets_proof_standard(p11, scintilla)-->True
        acceptable(p11)-->True
      applicable([p11, p12], ~[] => issue)-->True
    meets_proof_standard(issue, scintilla)-->True
  acceptable(issue)-->True
------ issue IS acceptable ------
============================================

Turn num = 1
arguments claimed: ['[p11, p12], ~[] => issue', '[p21], ~[e21] => p11', '[p31], ~[e31] => p21', '[p41], ~[e41] => p31']
arguments questioned: []
proposition "p21" state updated to "questioned"
--------------
SUB ISSUE: "e31""
--------------
  Calling dialogue(e31)
Added argument 'arg4' to graph by 'RESPONDENT'
Proposition 'e31' is already in graph
Added proposition '-e31' to graph with state None
Added proposition 'p42' to graph with state None
proposition "e31" state updated to "claimed"

================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
[p42], ~[] => e31
-----------------------------------------
Burden of proof met by RESPONDENT : ?
-----------------------------------------
proofstandard: []
Evaluating issue: "e31"
    Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
      Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
        Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
          Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
            Calling meets_proof_standard(p42, scintilla)
	arguments:[] 
            meets_proof_standard(p42, scintilla)-->False
          acceptable(p42)-->False
        applicable([p42], ~[] => e31)-->False
      meets_proof_standard(e31, scintilla)-->False
    acceptable(e31)-->False
------ e31 IS NOT acceptable ------
Evaluating issue: "issue"
    Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
      Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
        Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
          Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
            Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
              Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                    Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                      Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                        Calling meets_proof_standard(p31, scintilla)
	arguments:['[p41], ~[e41] => p31'] 
                          Calling applicable([p41], ~[e41] => p31)
Checking applicability of arg3...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p41}
Current exception: {e41}
                            Calling acceptable(e41)
Checking whether proposition 'e41' meets proof standard 'scintilla'.
                              Calling meets_proof_standard(e41, scintilla)
	arguments:[] 
                              meets_proof_standard(e41, scintilla)-->False
                            acceptable(e41)-->False
                          applicable([p41], ~[e41] => p31)-->True
                        meets_proof_standard(p31, scintilla)-->True
                      acceptable(p31)-->True
Current exception: {e31}
                      Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                        Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
                          Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
                            Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
                              Calling meets_proof_standard(p42, scintilla)
	arguments:[] 
                              meets_proof_standard(p42, scintilla)-->False
                            acceptable(p42)-->False
                          applicable([p42], ~[] => e31)-->False
                        meets_proof_standard(e31, scintilla)-->False
                      acceptable(e31)-->False
                    applicable([p31], ~[e31] => p21)-->True
                  meets_proof_standard(p21, scintilla)-->True
                acceptable(p21)-->True
Current exception: {e21}
                Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                  meets_proof_standard(e21, scintilla)-->False
                acceptable(e21)-->False
              applicable([p21], ~[e21] => p11)-->True
            meets_proof_standard(p11, scintilla)-->True
          acceptable(p11)-->True
        applicable([p11, p12], ~[] => issue)-->True
      meets_proof_standard(issue, scintilla)-->True
    acceptable(issue)-->True
------ issue IS acceptable ------
============================================

    Calling burden_met(e31, [p42], ~[] => e31)
Checking burden of proof for RESPONDENT
      Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
        Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
          Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
            Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
              Calling meets_proof_standard(p42, scintilla)
	arguments:[] 
              meets_proof_standard(p42, scintilla)-->False
            acceptable(p42)-->False
          applicable([p42], ~[] => e31)-->False
        meets_proof_standard(e31, scintilla)-->False
      acceptable(e31)-->False
Burden of Proof: False
Current Premise: "p42"
Adding arguments for "p42"
Added argument 'arg5' to graph by 'RESPONDENT'
Proposition 'p42' is already in graph
Added proposition '-p42' to graph with state None
Added proposition 'p43' to graph with state None
proposition "p42" state updated to "claimed"

================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
[p42], ~[] => e31
[p43], ~[] => p42
-----------------------------------------
Burden of proof met by RESPONDENT : False
-----------------------------------------
proofstandard: []
Evaluating issue: "e31"
      Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
        Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
          Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
            Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
              Calling meets_proof_standard(p42, scintilla)
	arguments:['[p43], ~[] => p42'] 
                Calling applicable([p43], ~[] => p42)
Checking applicability of arg5...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p43}
                applicable([p43], ~[] => p42)-->True
              meets_proof_standard(p42, scintilla)-->True
            acceptable(p42)-->True
          applicable([p42], ~[] => e31)-->True
        meets_proof_standard(e31, scintilla)-->True
      acceptable(e31)-->True
------ e31 IS acceptable ------
Evaluating issue: "issue"
      Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
        Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
          Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
            Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
              Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
                Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                  Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                      Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                        Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                          Calling meets_proof_standard(p31, scintilla)
	arguments:['[p41], ~[e41] => p31'] 
                            Calling applicable([p41], ~[e41] => p31)
Checking applicability of arg3...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p41}
Current exception: {e41}
                              Calling acceptable(e41)
Checking whether proposition 'e41' meets proof standard 'scintilla'.
                                Calling meets_proof_standard(e41, scintilla)
	arguments:[] 
                                meets_proof_standard(e41, scintilla)-->False
                              acceptable(e41)-->False
                            applicable([p41], ~[e41] => p31)-->True
                          meets_proof_standard(p31, scintilla)-->True
                        acceptable(p31)-->True
Current exception: {e31}
                        Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                          Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
                            Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
                              Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
                                Calling meets_proof_standard(p42, scintilla)
	arguments:['[p43], ~[] => p42'] 
                                  Calling applicable([p43], ~[] => p42)
Checking applicability of arg5...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p43}
                                  applicable([p43], ~[] => p42)-->True
                                meets_proof_standard(p42, scintilla)-->True
                              acceptable(p42)-->True
                            applicable([p42], ~[] => e31)-->True
                          meets_proof_standard(e31, scintilla)-->True
                        acceptable(e31)-->True
                      applicable([p31], ~[e31] => p21)-->False
                    meets_proof_standard(p21, scintilla)-->False
                  acceptable(p21)-->False
Current exception: {e21}
                  Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                    meets_proof_standard(e21, scintilla)-->False
                  acceptable(e21)-->False
                applicable([p21], ~[e21] => p11)-->False
              meets_proof_standard(p11, scintilla)-->False
            acceptable(p11)-->False
          applicable([p11, p12], ~[] => issue)-->False
        meets_proof_standard(issue, scintilla)-->False
      acceptable(issue)-->False
------ issue IS NOT acceptable ------
============================================

      Calling burden_met(e31, [p43], ~[] => p42)
Checking burden of proof for RESPONDENT
        Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
          Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
            Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
              Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
                Calling meets_proof_standard(p42, scintilla)
	arguments:['[p43], ~[] => p42'] 
                  Calling applicable([p43], ~[] => p42)
Checking applicability of arg5...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p43}
                  applicable([p43], ~[] => p42)-->True
                meets_proof_standard(p42, scintilla)-->True
              acceptable(p42)-->True
            applicable([p42], ~[] => e31)-->True
          meets_proof_standard(e31, scintilla)-->True
        acceptable(e31)-->True
Burden of Proof: True
      burden_met(e31, [p43], ~[] => p42)-->True

    burden_met(e31, [p42], ~[] => e31)-->True

================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
[p42], ~[] => e31
[p43], ~[] => p42
-----------------------------------------
Burden of proof met by RESPONDENT : True
-----------------------------------------
proofstandard: []
Evaluating issue: "e31"
    Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
      Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
        Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
          Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
            Calling meets_proof_standard(p42, scintilla)
	arguments:['[p43], ~[] => p42'] 
              Calling applicable([p43], ~[] => p42)
Checking applicability of arg5...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p43}
              applicable([p43], ~[] => p42)-->True
            meets_proof_standard(p42, scintilla)-->True
          acceptable(p42)-->True
        applicable([p42], ~[] => e31)-->True
      meets_proof_standard(e31, scintilla)-->True
    acceptable(e31)-->True
------ e31 IS acceptable ------
Evaluating issue: "issue"
    Calling acceptable(issue)
Checking whether proposition 'issue' meets proof standard 'scintilla'.
      Calling meets_proof_standard(issue, scintilla)
	arguments:['[p11, p12], ~[] => issue'] 
        Calling applicable([p11, p12], ~[] => issue)
Checking applicability of arg0...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p11, p12}
          Calling acceptable(p11)
Checking whether proposition 'p11' meets proof standard 'scintilla'.
            Calling meets_proof_standard(p11, scintilla)
	arguments:['[p21], ~[e21] => p11'] 
              Calling applicable([p21], ~[e21] => p11)
Checking applicability of arg1...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p21}
                Calling acceptable(p21)
Checking whether proposition 'p21' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(p21, scintilla)
	arguments:['[p31], ~[e31] => p21'] 
                    Calling applicable([p31], ~[e31] => p21)
Checking applicability of arg2...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p31}
                      Calling acceptable(p31)
Checking whether proposition 'p31' meets proof standard 'scintilla'.
                        Calling meets_proof_standard(p31, scintilla)
	arguments:['[p41], ~[e41] => p31'] 
                          Calling applicable([p41], ~[e41] => p31)
Checking applicability of arg3...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p41}
Current exception: {e41}
                            Calling acceptable(e41)
Checking whether proposition 'e41' meets proof standard 'scintilla'.
                              Calling meets_proof_standard(e41, scintilla)
	arguments:[] 
                              meets_proof_standard(e41, scintilla)-->False
                            acceptable(e41)-->False
                          applicable([p41], ~[e41] => p31)-->True
                        meets_proof_standard(p31, scintilla)-->True
                      acceptable(p31)-->True
Current exception: {e31}
                      Calling acceptable(e31)
Checking whether proposition 'e31' meets proof standard 'scintilla'.
                        Calling meets_proof_standard(e31, scintilla)
	arguments:['[p42], ~[] => e31'] 
                          Calling applicable([p42], ~[] => e31)
Checking applicability of arg4...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p42}
                            Calling acceptable(p42)
Checking whether proposition 'p42' meets proof standard 'scintilla'.
                              Calling meets_proof_standard(p42, scintilla)
	arguments:['[p43], ~[] => p42'] 
                                Calling applicable([p43], ~[] => p42)
Checking applicability of arg5...
Current assumptions: {p41, p43, p45, p12}
Current premises: {p43}
                                applicable([p43], ~[] => p42)-->True
                              meets_proof_standard(p42, scintilla)-->True
                            acceptable(p42)-->True
                          applicable([p42], ~[] => e31)-->True
                        meets_proof_standard(e31, scintilla)-->True
                      acceptable(e31)-->True
                    applicable([p31], ~[e31] => p21)-->False
                  meets_proof_standard(p21, scintilla)-->False
                acceptable(p21)-->False
Current exception: {e21}
                Calling acceptable(e21)
Checking whether proposition 'e21' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(e21, scintilla)
	arguments:[] 
                  meets_proof_standard(e21, scintilla)-->False
                acceptable(e21)-->False
              applicable([p21], ~[e21] => p11)-->False
            meets_proof_standard(p11, scintilla)-->False
          acceptable(p11)-->False
        applicable([p11, p12], ~[] => issue)-->False
      meets_proof_standard(issue, scintilla)-->False
    acceptable(issue)-->False
------ issue IS NOT acceptable ------
============================================

Turn num = 2
arguments claimed: ['[p11, p12], ~[] => issue', '[p21], ~[e21] => p11', '[p41], ~[e41] => p31', '[p42], ~[] => e31', '[p43], ~[] => p42']
arguments questioned: ['[p31], ~[e31] => p21']
No exceptions found for any of the claims made!
No rebuttal found as well!
No arguments found by PROPONENT for issue 'e31'
  dialogue(e31)-->False
dialogue(issue)-->None



********************************************************************************DIALOGUE SUMMARY:
********************************************************************************
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
-----------------------------------------
Burden of proof met by PROPONENT : ?
-----------------------------------------
		ISSUE "issue" acceptable? -> False
============================================
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
		ISSUE "issue" acceptable? -> False
============================================
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
		ISSUE "issue" acceptable? -> False
============================================
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
		ISSUE "issue" acceptable? -> True
============================================
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
-----------------------------------------
Burden of proof met by PROPONENT : True
-----------------------------------------
		ISSUE "issue" acceptable? -> True
============================================
================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
[p42], ~[] => e31
-----------------------------------------
Burden of proof met by RESPONDENT : ?
-----------------------------------------
		ISSUE "e31" acceptable? -> False
TOP ISSUE "issue" acceptable? -> True
============================================
================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
[p42], ~[] => e31
[p43], ~[] => p42
-----------------------------------------
Burden of proof met by RESPONDENT : False
-----------------------------------------
		ISSUE "e31" acceptable? -> True
TOP ISSUE "issue" acceptable? -> False
============================================
================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[p11, p12], ~[] => issue
[p21], ~[e21] => p11
[p31], ~[e31] => p21
[p41], ~[e41] => p31
[p42], ~[] => e31
[p43], ~[] => p42
-----------------------------------------
Burden of proof met by RESPONDENT : True
-----------------------------------------
		ISSUE "e31" acceptable? -> True
TOP ISSUE "issue" acceptable? -> False
============================================
********************************************************************************
