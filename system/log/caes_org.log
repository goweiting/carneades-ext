	Tokenizing file...
	Parsing tokens...
	Adding propositions to CAES
	Adding assumptions to CAES
	Adding arguments to CAES
Added argument 'is there an intent to murder?' to graph by 'None'
Added proposition 'accused committed murder' to graph with state None
Added proposition '-accused committed murder' to graph with state None
Added proposition 'accused have the intent' to graph with state None
Added proposition 'accused killed the victim' to graph with state None
Added argument 'is witness1 sufficient to proof intent?' to graph by 'None'
Proposition 'accused have the intent' is already in graph
Added proposition '-accused have the intent' to graph with state None
Added proposition 'first witness' to graph with state None
Added proposition 'first witness is unreliable' to graph with state None
Added argument 'is witness2 sufficient to proof intent?' to graph by 'None'
Proposition '-accused have the intent' is already in graph
Proposition 'accused have the intent' is already in graph
Added proposition 'second witness' to graph with state None
Added proposition 'second witness is unreliable' to graph with state None
	Adding parameter to CAES
	Adding proofstandard to CAES
	Adding issues to CAES
	alpha:0.4, beta:0.3, gamme:0.3
	propliterals: {'witness1': first witness, 'unreliable2': second witness is unreliable, 'witness2': second witness, 'intent': accused have the intent, 'kill': accused killed the victim, 'unreliable1': first witness is unreliable, 'murder': accused committed murder} 
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent', '[accused have the intent, accused killed the victim], ~[] => accused committed murder', '[second witness], ~[second witness is unreliable] => -accused have the intent'] 
	weights : {is witness1 sufficient to proof intent?: 0.81, is there an intent to murder?: 0.8, is witness2 sufficient to proof intent?: 0.8}
	assumptions: {first witness, accused killed the victim, second witness} 
	issues: {accused committed murder} 
	proofstandard: [(accused have the intent, 'beyond_reasonable_doubt')]
Dialogue Mode: On
********************************************************************************
ISSUE 0: "accused committed murder"
********************************************************************************
Calling dialogue(accused committed murder)
Added argument 'is there an intent to murder?' to graph by 'PROPONENT'
Added proposition 'accused committed murder' to graph with state claimed
Added proposition '-accused committed murder' to graph with state None
Added proposition 'accused have the intent' to graph with state None
Added proposition 'accused killed the victim' to graph with state None

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
-----------------------------------------
Burden of proof met by PROPONENT : ?
-----------------------------------------
proofstandard: []
Evaluating issue: "accused committed murder"
  Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
    Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
      Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
        Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'scintilla'.
          Calling meets_proof_standard(accused have the intent, scintilla)
	arguments:[] 
          meets_proof_standard(accused have the intent, scintilla)-->False
        acceptable(accused have the intent)-->False
      applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->False
    meets_proof_standard(accused committed murder, scintilla)-->False
  acceptable(accused committed murder)-->False
------ "accused committed murder" IS NOT acceptable ------
============================================

  Calling burden_met(accused committed murder, [accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking burden of proof for PROPONENT
    Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
      Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
        Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
          Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'scintilla'.
            Calling meets_proof_standard(accused have the intent, scintilla)
	arguments:[] 
            meets_proof_standard(accused have the intent, scintilla)-->False
          acceptable(accused have the intent)-->False
        applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->False
      meets_proof_standard(accused committed murder, scintilla)-->False
    acceptable(accused committed murder)-->False
Burden of Proof: False
Current Premise: "accused have the intent"
Adding arguments for "accused have the intent"
Added argument 'is witness1 sufficient to proof intent?' to graph by 'PROPONENT'
Proposition 'accused have the intent' is already in graph
Added proposition '-accused have the intent' to graph with state None
Added proposition 'first witness' to graph with state None
Added proposition 'first witness is unreliable' to graph with state None
proposition "accused have the intent" state updated to "claimed"

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
proofstandard: [(accused have the intent, 'beyond_reasonable_doubt')]
Evaluating issue: "accused committed murder"
    Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
      Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
        Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
          Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'beyond_reasonable_doubt'.
            Calling meets_proof_standard(accused have the intent, beyond_reasonable_doubt)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
              Calling meets_proof_standard(accused have the intent, clear_and_convincing)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
                Calling applicable([first witness], ~[first witness is unreliable] => accused have the intent)
Checking applicability of is witness1 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {first witness}
Current exception: {first witness is unreliable}
                  Calling acceptable(first witness is unreliable)
Checking whether proposition 'first witness is unreliable' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(first witness is unreliable, scintilla)
	arguments:[] 
                    meets_proof_standard(first witness is unreliable, scintilla)-->False
                  acceptable(first witness is unreliable)-->False
                applicable([first witness], ~[first witness is unreliable] => accused have the intent)-->True
Checking applicability and weights of [is witness1 sufficient to proof intent?]
Weights of [is witness1 sufficient to proof intent?] are [0.81]
No applicable arguments in []
max weight pro 'accused have the intent' is 0.81
max weight con 'accused have the intent' is 0.0
max weight pro '0.81' >  alpha '0.4': True
diff between pro and con = 0.81 > gamma: True
              meets_proof_standard(accused have the intent, clear_and_convincing)-->True
No applicable arguments in []
            meets_proof_standard(accused have the intent, beyond_reasonable_doubt)-->True
          acceptable(accused have the intent)-->True
        applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->True
      meets_proof_standard(accused committed murder, scintilla)-->True
    acceptable(accused committed murder)-->True
------ "accused committed murder" IS acceptable ------
============================================

    Calling burden_met(accused committed murder, [first witness], ~[first witness is unreliable] => accused have the intent)
Checking burden of proof for PROPONENT
      Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
        Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
          Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
            Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'scintilla'.
              Calling meets_proof_standard(accused have the intent, scintilla)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
                Calling applicable([first witness], ~[first witness is unreliable] => accused have the intent)
Checking applicability of is witness1 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {first witness}
Current exception: {first witness is unreliable}
                  Calling acceptable(first witness is unreliable)
Checking whether proposition 'first witness is unreliable' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(first witness is unreliable, scintilla)
	arguments:[] 
                    meets_proof_standard(first witness is unreliable, scintilla)-->False
                  acceptable(first witness is unreliable)-->False
                applicable([first witness], ~[first witness is unreliable] => accused have the intent)-->True
              meets_proof_standard(accused have the intent, scintilla)-->True
            acceptable(accused have the intent)-->True
          applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->True
        meets_proof_standard(accused committed murder, scintilla)-->True
      acceptable(accused committed murder)-->True
Burden of Proof: True
    burden_met(accused committed murder, [first witness], ~[first witness is unreliable] => accused have the intent)-->True

Current Premise: "accused killed the victim"
  burden_met(accused committed murder, [accused have the intent, accused killed the victim], ~[] => accused committed murder)-->True

================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
-----------------------------------------
Burden of proof met by PROPONENT : True
-----------------------------------------
proofstandard: [(accused have the intent, 'beyond_reasonable_doubt')]
Evaluating issue: "accused committed murder"
  Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
    Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
      Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
        Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'beyond_reasonable_doubt'.
          Calling meets_proof_standard(accused have the intent, beyond_reasonable_doubt)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
            Calling meets_proof_standard(accused have the intent, clear_and_convincing)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
              Calling applicable([first witness], ~[first witness is unreliable] => accused have the intent)
Checking applicability of is witness1 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {first witness}
Current exception: {first witness is unreliable}
                Calling acceptable(first witness is unreliable)
Checking whether proposition 'first witness is unreliable' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(first witness is unreliable, scintilla)
	arguments:[] 
                  meets_proof_standard(first witness is unreliable, scintilla)-->False
                acceptable(first witness is unreliable)-->False
              applicable([first witness], ~[first witness is unreliable] => accused have the intent)-->True
Checking applicability and weights of [is witness1 sufficient to proof intent?]
Weights of [is witness1 sufficient to proof intent?] are [0.81]
No applicable arguments in []
max weight pro 'accused have the intent' is 0.81
max weight con 'accused have the intent' is 0.0
max weight pro '0.81' >  alpha '0.4': True
diff between pro and con = 0.81 > gamma: True
            meets_proof_standard(accused have the intent, clear_and_convincing)-->True
No applicable arguments in []
          meets_proof_standard(accused have the intent, beyond_reasonable_doubt)-->True
        acceptable(accused have the intent)-->True
      applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->True
    meets_proof_standard(accused committed murder, scintilla)-->True
  acceptable(accused committed murder)-->True
------ "accused committed murder" IS acceptable ------
============================================

turn_num 1
USING ALGORITHM 1 TO FIND ARGUMENTS
  Calling find_args_to_exceptions(accused committed murder)
find_args_to_exceptions in "accused committed murder"
arg: [accused have the intent, accused killed the victim], ~[] => accused committed murder
exceptions []
args_to_consider: ['[first witness], ~[first witness is unreliable] => accused have the intent']
arg: [first witness], ~[first witness is unreliable] => accused have the intent
exceptions []
args_to_consider: []
  find_args_to_exceptions(accused committed murder)-->False
No arguments found to satisfy exceptions in issue "accused committed murder"
  Calling find_best_con_argument(accused committed murder)
find_best_con_argument for "accused committed murder"
arg: [accused have the intent, accused killed the victim], ~[] => accused committed murder
arg_cons []
args_to_consider: ['[first witness], ~[first witness is unreliable] => accused have the intent']
arg: [first witness], ~[first witness is unreliable] => accused have the intent
arg_cons ['[second witness], ~[second witness is unreliable] => -accused have the intent']
proposition "accused have the intent" state updated to "questioned"
proposition "-accused have the intent" state updated to "claimed"
Found a con argument
  find_best_con_argument(accused committed murder)-->[second witness], ~[second witness is unreliable] => -accused have the intent
  Calling dialogue(-accused have the intent)
Added argument 'is witness2 sufficient to proof intent?' to graph by 'RESPONDENT'
Proposition '-accused have the intent' is already in graph
Proposition 'accused have the intent' is already in graph
Added proposition 'second witness' to graph with state None
Added proposition 'second witness is unreliable' to graph with state None

================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
[second witness], ~[second witness is unreliable] => -accused have the intent
-----------------------------------------
Burden of proof met by RESPONDENT : ?
-----------------------------------------
proofstandard: [(accused have the intent, 'beyond_reasonable_doubt')]
Evaluating issue: "-accused have the intent"
    Calling acceptable(-accused have the intent)
Checking whether proposition '-accused have the intent' meets proof standard 'scintilla'.
      Calling meets_proof_standard(-accused have the intent, scintilla)
	arguments:['[second witness], ~[second witness is unreliable] => -accused have the intent'] 
        Calling applicable([second witness], ~[second witness is unreliable] => -accused have the intent)
Checking applicability of is witness2 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {second witness}
Current exception: {second witness is unreliable}
          Calling acceptable(second witness is unreliable)
Checking whether proposition 'second witness is unreliable' meets proof standard 'scintilla'.
            Calling meets_proof_standard(second witness is unreliable, scintilla)
	arguments:[] 
            meets_proof_standard(second witness is unreliable, scintilla)-->False
          acceptable(second witness is unreliable)-->False
        applicable([second witness], ~[second witness is unreliable] => -accused have the intent)-->True
      meets_proof_standard(-accused have the intent, scintilla)-->True
    acceptable(-accused have the intent)-->True
------ "-accused have the intent" IS acceptable ------
Evaluating issue: "accused committed murder"
    Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
      Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
        Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
          Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'beyond_reasonable_doubt'.
            Calling meets_proof_standard(accused have the intent, beyond_reasonable_doubt)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
              Calling meets_proof_standard(accused have the intent, clear_and_convincing)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
                Calling applicable([first witness], ~[first witness is unreliable] => accused have the intent)
Checking applicability of is witness1 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {first witness}
Current exception: {first witness is unreliable}
                  Calling acceptable(first witness is unreliable)
Checking whether proposition 'first witness is unreliable' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(first witness is unreliable, scintilla)
	arguments:[] 
                    meets_proof_standard(first witness is unreliable, scintilla)-->False
                  acceptable(first witness is unreliable)-->False
                applicable([first witness], ~[first witness is unreliable] => accused have the intent)-->True
Checking applicability and weights of [is witness1 sufficient to proof intent?]
Weights of [is witness1 sufficient to proof intent?] are [0.81]
                Calling applicable([second witness], ~[second witness is unreliable] => -accused have the intent)
Checking applicability of is witness2 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {second witness}
Current exception: {second witness is unreliable}
                  Calling acceptable(second witness is unreliable)
Checking whether proposition 'second witness is unreliable' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(second witness is unreliable, scintilla)
	arguments:[] 
                    meets_proof_standard(second witness is unreliable, scintilla)-->False
                  acceptable(second witness is unreliable)-->False
                applicable([second witness], ~[second witness is unreliable] => -accused have the intent)-->True
Checking applicability and weights of [is witness2 sufficient to proof intent?]
Weights of [is witness2 sufficient to proof intent?] are [0.8]
max weight pro 'accused have the intent' is 0.81
max weight con 'accused have the intent' is 0.8
max weight pro '0.81' >  alpha '0.4': True
diff between pro and con = 0.010000000000000009 > gamma: False
              meets_proof_standard(accused have the intent, clear_and_convincing)-->False
            meets_proof_standard(accused have the intent, beyond_reasonable_doubt)-->False
          acceptable(accused have the intent)-->False
        applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->False
      meets_proof_standard(accused committed murder, scintilla)-->False
    acceptable(accused committed murder)-->False
------ "accused committed murder" IS NOT acceptable ------
============================================

    Calling burden_met(-accused have the intent, [second witness], ~[second witness is unreliable] => -accused have the intent)
Checking burden of proof for RESPONDENT
      Calling acceptable(-accused have the intent)
Checking whether proposition '-accused have the intent' meets proof standard 'scintilla'.
        Calling meets_proof_standard(-accused have the intent, scintilla)
	arguments:['[second witness], ~[second witness is unreliable] => -accused have the intent'] 
          Calling applicable([second witness], ~[second witness is unreliable] => -accused have the intent)
Checking applicability of is witness2 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {second witness}
Current exception: {second witness is unreliable}
            Calling acceptable(second witness is unreliable)
Checking whether proposition 'second witness is unreliable' meets proof standard 'scintilla'.
              Calling meets_proof_standard(second witness is unreliable, scintilla)
	arguments:[] 
              meets_proof_standard(second witness is unreliable, scintilla)-->False
            acceptable(second witness is unreliable)-->False
          applicable([second witness], ~[second witness is unreliable] => -accused have the intent)-->True
        meets_proof_standard(-accused have the intent, scintilla)-->True
      acceptable(-accused have the intent)-->True
Burden of Proof: True
    burden_met(-accused have the intent, [second witness], ~[second witness is unreliable] => -accused have the intent)-->True

================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
[second witness], ~[second witness is unreliable] => -accused have the intent
-----------------------------------------
Burden of proof met by RESPONDENT : True
-----------------------------------------
proofstandard: [(accused have the intent, 'beyond_reasonable_doubt')]
Evaluating issue: "-accused have the intent"
    Calling acceptable(-accused have the intent)
Checking whether proposition '-accused have the intent' meets proof standard 'scintilla'.
      Calling meets_proof_standard(-accused have the intent, scintilla)
	arguments:['[second witness], ~[second witness is unreliable] => -accused have the intent'] 
        Calling applicable([second witness], ~[second witness is unreliable] => -accused have the intent)
Checking applicability of is witness2 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {second witness}
Current exception: {second witness is unreliable}
          Calling acceptable(second witness is unreliable)
Checking whether proposition 'second witness is unreliable' meets proof standard 'scintilla'.
            Calling meets_proof_standard(second witness is unreliable, scintilla)
	arguments:[] 
            meets_proof_standard(second witness is unreliable, scintilla)-->False
          acceptable(second witness is unreliable)-->False
        applicable([second witness], ~[second witness is unreliable] => -accused have the intent)-->True
      meets_proof_standard(-accused have the intent, scintilla)-->True
    acceptable(-accused have the intent)-->True
------ "-accused have the intent" IS acceptable ------
Evaluating issue: "accused committed murder"
    Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
      Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
        Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
          Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'beyond_reasonable_doubt'.
            Calling meets_proof_standard(accused have the intent, beyond_reasonable_doubt)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
              Calling meets_proof_standard(accused have the intent, clear_and_convincing)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
                Calling applicable([first witness], ~[first witness is unreliable] => accused have the intent)
Checking applicability of is witness1 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {first witness}
Current exception: {first witness is unreliable}
                  Calling acceptable(first witness is unreliable)
Checking whether proposition 'first witness is unreliable' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(first witness is unreliable, scintilla)
	arguments:[] 
                    meets_proof_standard(first witness is unreliable, scintilla)-->False
                  acceptable(first witness is unreliable)-->False
                applicable([first witness], ~[first witness is unreliable] => accused have the intent)-->True
Checking applicability and weights of [is witness1 sufficient to proof intent?]
Weights of [is witness1 sufficient to proof intent?] are [0.81]
                Calling applicable([second witness], ~[second witness is unreliable] => -accused have the intent)
Checking applicability of is witness2 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {second witness}
Current exception: {second witness is unreliable}
                  Calling acceptable(second witness is unreliable)
Checking whether proposition 'second witness is unreliable' meets proof standard 'scintilla'.
                    Calling meets_proof_standard(second witness is unreliable, scintilla)
	arguments:[] 
                    meets_proof_standard(second witness is unreliable, scintilla)-->False
                  acceptable(second witness is unreliable)-->False
                applicable([second witness], ~[second witness is unreliable] => -accused have the intent)-->True
Checking applicability and weights of [is witness2 sufficient to proof intent?]
Weights of [is witness2 sufficient to proof intent?] are [0.8]
max weight pro 'accused have the intent' is 0.81
max weight con 'accused have the intent' is 0.8
max weight pro '0.81' >  alpha '0.4': True
diff between pro and con = 0.010000000000000009 > gamma: False
              meets_proof_standard(accused have the intent, clear_and_convincing)-->False
            meets_proof_standard(accused have the intent, beyond_reasonable_doubt)-->False
          acceptable(accused have the intent)-->False
        applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->False
      meets_proof_standard(accused committed murder, scintilla)-->False
    acceptable(accused committed murder)-->False
------ "accused committed murder" IS NOT acceptable ------
============================================

turn_num 2
USING ALGORITHM 1 TO FIND ARGUMENTS
    Calling find_args_to_exceptions(-accused have the intent)
find_args_to_exceptions in "-accused have the intent"
arg: [second witness], ~[second witness is unreliable] => -accused have the intent
exceptions []
args_to_consider: []
    find_args_to_exceptions(-accused have the intent)-->False
No arguments found to satisfy exceptions in issue "-accused have the intent"
    Calling find_best_con_argument(-accused have the intent)
find_best_con_argument for "-accused have the intent"
arg: [second witness], ~[second witness is unreliable] => -accused have the intent
arg_cons ['[first witness], ~[first witness is unreliable] => accused have the intent']
argument "[first witness], ~[first witness is unreliable] => accused have the intent" has already been added!
    find_best_con_argument(-accused have the intent)-->False
  dialogue(-accused have the intent)-->True
<=== issue: accused committed murder
Evaluating issue: "accused committed murder"
  Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
    Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
      Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
        Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'beyond_reasonable_doubt'.
          Calling meets_proof_standard(accused have the intent, beyond_reasonable_doubt)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
            Calling meets_proof_standard(accused have the intent, clear_and_convincing)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
              Calling applicable([first witness], ~[first witness is unreliable] => accused have the intent)
Checking applicability of is witness1 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {first witness}
Current exception: {first witness is unreliable}
                Calling acceptable(first witness is unreliable)
Checking whether proposition 'first witness is unreliable' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(first witness is unreliable, scintilla)
	arguments:[] 
                  meets_proof_standard(first witness is unreliable, scintilla)-->False
                acceptable(first witness is unreliable)-->False
              applicable([first witness], ~[first witness is unreliable] => accused have the intent)-->True
Checking applicability and weights of [is witness1 sufficient to proof intent?]
Weights of [is witness1 sufficient to proof intent?] are [0.81]
              Calling applicable([second witness], ~[second witness is unreliable] => -accused have the intent)
Checking applicability of is witness2 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {second witness}
Current exception: {second witness is unreliable}
                Calling acceptable(second witness is unreliable)
Checking whether proposition 'second witness is unreliable' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(second witness is unreliable, scintilla)
	arguments:[] 
                  meets_proof_standard(second witness is unreliable, scintilla)-->False
                acceptable(second witness is unreliable)-->False
              applicable([second witness], ~[second witness is unreliable] => -accused have the intent)-->True
Checking applicability and weights of [is witness2 sufficient to proof intent?]
Weights of [is witness2 sufficient to proof intent?] are [0.8]
max weight pro 'accused have the intent' is 0.81
max weight con 'accused have the intent' is 0.8
max weight pro '0.81' >  alpha '0.4': True
diff between pro and con = 0.010000000000000009 > gamma: False
            meets_proof_standard(accused have the intent, clear_and_convincing)-->False
          meets_proof_standard(accused have the intent, beyond_reasonable_doubt)-->False
        acceptable(accused have the intent)-->False
      applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->False
    meets_proof_standard(accused committed murder, scintilla)-->False
  acceptable(accused committed murder)-->False
------ "accused committed murder" IS NOT acceptable ------
Evaluating issue: "accused committed murder"
  Calling acceptable(accused committed murder)
Checking whether proposition 'accused committed murder' meets proof standard 'scintilla'.
    Calling meets_proof_standard(accused committed murder, scintilla)
	arguments:['[accused have the intent, accused killed the victim], ~[] => accused committed murder'] 
      Calling applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)
Checking applicability of is there an intent to murder?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {accused have the intent, accused killed the victim}
        Calling acceptable(accused have the intent)
Checking whether proposition 'accused have the intent' meets proof standard 'beyond_reasonable_doubt'.
          Calling meets_proof_standard(accused have the intent, beyond_reasonable_doubt)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
            Calling meets_proof_standard(accused have the intent, clear_and_convincing)
	arguments:['[first witness], ~[first witness is unreliable] => accused have the intent'] 
              Calling applicable([first witness], ~[first witness is unreliable] => accused have the intent)
Checking applicability of is witness1 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {first witness}
Current exception: {first witness is unreliable}
                Calling acceptable(first witness is unreliable)
Checking whether proposition 'first witness is unreliable' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(first witness is unreliable, scintilla)
	arguments:[] 
                  meets_proof_standard(first witness is unreliable, scintilla)-->False
                acceptable(first witness is unreliable)-->False
              applicable([first witness], ~[first witness is unreliable] => accused have the intent)-->True
Checking applicability and weights of [is witness1 sufficient to proof intent?]
Weights of [is witness1 sufficient to proof intent?] are [0.81]
              Calling applicable([second witness], ~[second witness is unreliable] => -accused have the intent)
Checking applicability of is witness2 sufficient to proof intent?...
Current assumptions: {first witness, accused killed the victim, second witness}
Current premises: {second witness}
Current exception: {second witness is unreliable}
                Calling acceptable(second witness is unreliable)
Checking whether proposition 'second witness is unreliable' meets proof standard 'scintilla'.
                  Calling meets_proof_standard(second witness is unreliable, scintilla)
	arguments:[] 
                  meets_proof_standard(second witness is unreliable, scintilla)-->False
                acceptable(second witness is unreliable)-->False
              applicable([second witness], ~[second witness is unreliable] => -accused have the intent)-->True
Checking applicability and weights of [is witness2 sufficient to proof intent?]
Weights of [is witness2 sufficient to proof intent?] are [0.8]
max weight pro 'accused have the intent' is 0.81
max weight con 'accused have the intent' is 0.8
max weight pro '0.81' >  alpha '0.4': True
diff between pro and con = 0.010000000000000009 > gamma: False
            meets_proof_standard(accused have the intent, clear_and_convincing)-->False
          meets_proof_standard(accused have the intent, beyond_reasonable_doubt)-->False
        acceptable(accused have the intent)-->False
      applicable([accused have the intent, accused killed the victim], ~[] => accused committed murder)-->False
    meets_proof_standard(accused committed murder, scintilla)-->False
  acceptable(accused committed murder)-->False
------ "accused committed murder" IS NOT acceptable ------
dialogue(accused committed murder)-->False



********************************************************************************DIALOGUE SUMMARY:
********************************************************************************
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
-----------------------------------------
Burden of proof met by PROPONENT : ?
-----------------------------------------
		ISSUE "accused committed murder" acceptable? -> False
============================================
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
-----------------------------------------
Burden of proof met by PROPONENT : False
-----------------------------------------
		ISSUE "accused committed murder" acceptable? -> True
============================================
================== turn 0 ==================
BURDEN OF PROOF @ PROPONENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
-----------------------------------------
Burden of proof met by PROPONENT : True
-----------------------------------------
		ISSUE "accused committed murder" acceptable? -> True
============================================
================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
[second witness], ~[second witness is unreliable] => -accused have the intent
-----------------------------------------
Burden of proof met by RESPONDENT : ?
-----------------------------------------
		ISSUE "-accused have the intent" acceptable? -> True
TOP ISSUE "accused committed murder" acceptable? -> False
============================================
================== turn 1 ==================
BURDEN OF PROOF @ RESPONDENT
ARGUMENTS:
[accused have the intent, accused killed the victim], ~[] => accused committed murder
[first witness], ~[first witness is unreliable] => accused have the intent
[second witness], ~[second witness is unreliable] => -accused have the intent
-----------------------------------------
Burden of proof met by RESPONDENT : True
-----------------------------------------
		ISSUE "-accused have the intent" acceptable? -> True
TOP ISSUE "accused committed murder" acceptable? -> False
============================================
********************************************************************************
